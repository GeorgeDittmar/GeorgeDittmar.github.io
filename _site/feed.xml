<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>George&#39;s Tech Musings</title>
    <description>Machine Learning / Big Data developer in PDX trying to build a nicer skynet
</description>
    <link>georgedittmar.github.io/</link>
    <atom:link href="georgedittmar.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 24 Apr 2016 15:44:18 -0700</pubDate>
    <lastBuildDate>Sun, 24 Apr 2016 15:44:18 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Setting up Spark and PyCharm the hard way...</title>
        <description>&lt;p&gt;I only say the hardway because it ended up being more tedious than I remember compared to using Spark with Scala. I still
prefer Scala to the Python implementation of Spark but in some cases Scala might be a bit heavy handed so thats where PySpark
can come in handy. This goes over setting up the basic dev environment and getting it setup in your PyCharm projects. This 
tutorial assumes you are running Mac OSX and have the base dependencies in place to run spark such as java 7+, python 2.7+ or
python 3.1+ etc. These steps will be very similar to how you can setup spark on a linux environment as well.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-the-environment&quot;&gt;Setting Up the Environment&lt;/h2&gt;

&lt;p&gt;First and formost you need to grab Spark from the Apache site &lt;a href=&quot;http://spark.apache.org/downloads.html&quot;&gt;here&lt;/a&gt;. The latest version 1.6.1
should be compatible with current instances of EMR if you are on AWS or whichever version you need for your own personal Hadoop
cluster. There is also the option for a hadoop free build of spark but I have not looked into that yet. Once that is downloaded 
extract the tar into your favorite library location. For myself I created a directory under /opt.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mkdir -p /opt/spark-1.6.1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then extract the content of the spark archive into there. Next you will want to set SPARK_HOME on your path. If you do not already have
a .bash_profile setup you will want to create one now. I did this below with the following command. You might need to be sudo for this to work.&lt;/p&gt;

&lt;p&gt;Create the bash_profile&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo touch ~/.bash_profile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Add SPARK_HOME to the location of your spark install inside .bash_profile&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;export SPARK_HOME=/opt/spark-1.6.1&lt;/p&gt;

  &lt;p&gt;export PATH=$SPARK_HOME/bin:$PATH&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once this is done you should just need to restart the terminal and start up spark-shell in the command line.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/spark_shell.png&quot; alt=&quot;spark shell terminal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If the shell comes up then you have successfully installed spark on your Mac! Next lets set it up to work with pycharm IDE for easy
pyspark development.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-pycharm&quot;&gt;Setting up PyCharm&lt;/h2&gt;

&lt;p&gt;Now lets try to setup pyspark in pycharm so that we can code and run jobs inside the IDE. First grab the git repo I have
&lt;a href=&quot;https://github.com/GeorgeDittmar/pyspark-lab&quot;&gt;here&lt;/a&gt; so that we can verify the setup is correct and run a pyspark script. Once that is cloned down
open pycharm and load up the project. First we need to setup the interpreter to correctly load the spark dependencies we need. Go to 
the Project Interpreter.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;File -&amp;gt; Default Settings -&amp;gt; Project Interpreter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should see this screen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/project_interpreter.png&quot; alt=&quot;Project Interpreter Screen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then click on the gear at the top right and select more to get you to this screen…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/inter_path.png&quot; alt=&quot;Interpreter Paths&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then click the file structure icon at the bottom left and click the plus symbol on the next screen to set the path to the 
local spark install at /opt/spark-1.6.1/python. We want to go to the python directory since we will only be working with python.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/spark_local_path.png&quot; alt=&quot;add path&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once that is done you should now see it in the list of interpreter paths python will load up and have access to while you develop.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/final_inter_path.png&quot; alt=&quot;added to interpreter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now lets see if pycharm works correctly with one of the example scripts. Lets take a look at the TextCounts.py example script.
This script just reads in the sample.txt file which is a chapter from a book found on the gutenberg project that will use spark locally
to count up the number of times a word is in a document then calculate the term frequency for every word. Right click on the source file and hit run.
You should see output like below in the IDE’s console. If it runs correctly you should now see which terms are the most frequent from that
sample document and can now tell all your friends this great stat that was solved using Spark!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/run_console.png&quot; alt=&quot;BIG DATA&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you do not see the above output and get some sort of error below like py4j not installed or found then you will need to add that to 
pycharm manually as well, though it comes packaged with pyspark so should be brought in when loading the interpreter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/error.png&quot; alt=&quot;error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To resolve this you will need to pull down py4j and luckily pycharm has a package manager to help with that so you can get running quickly.
Go back to the Default Settings screen like earlier and down at the bottom left hit the plus button. That will bring up the package manager that
you can then search for py4j. Select the py4j package, not the asphalt-py4j package, and hit install package.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/pyspark_blog/package_manager.png&quot; alt=&quot;package manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once that is installed rerun the script and it should now work! Let me know if this was helpful or not or if there are other 
topics I could cover around spark. Now also whenever you create a new project in pycharm you should have access to all that you already setup
previously with the python interpreter so you should not need to repeat these steps unless you download a new version of spark.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Apr 2016 15:21:00 -0700</pubDate>
        <link>georgedittmar.github.io/development,/spark,/pyspark/2016/04/21/Setting-up-PySpark-and-PyCharm.html</link>
        <guid isPermaLink="true">georgedittmar.github.io/development,/spark,/pyspark/2016/04/21/Setting-up-PySpark-and-PyCharm.html</guid>
        
        
        <category>development,</category>
        
        <category>spark,</category>
        
        <category>pyspark</category>
        
      </item>
    
      <item>
        <title>Insert Title Here...</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Anxiety is the hand maiden of creativity.
-T. S. Eliot&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above quote I think sums up how I feel about my work and putting it out there for others to see. My anxiety when creating new
projects or trying to talk about something with authority to someone drives my thirst for knowledge and wanting to know I am
correct in my understanding of things. This also drives my need to build things on my own and try to implement things with my own creative twist
with the hope that it might be useful for others.&lt;/p&gt;

&lt;p&gt;Now this blog post isnt going to be about why I do what I do but I wanted it to be an intro to something I started a year ago while job hunting
as a way to keep my brain active and not fall victim to complacency in my skills. So for the next series of posts I will try to describe how to do
simple document clustering using K-Means and K-NN to learn book genre’s. This will also be a good test of how well I know this material, and
how well I can explain my understanding.&lt;/p&gt;

&lt;p&gt;First I’ll give a basic definition of what problem we are wanting to solve and the setup of the the data. Secondly I’ll discuss the algorithms
being used, hopefully with useful citations, that will give some validity to what I am talking about. I am still working out if this will be a
single blog post or multiple smaller posts. I guess we shall see how things go and hopefully this will keep me wanting to post more as I learn new things
or work on things.&lt;/p&gt;

&lt;p&gt;– G&lt;/p&gt;

</description>
        <pubDate>Sat, 11 Apr 2015 15:21:00 -0700</pubDate>
        <link>georgedittmar.github.io/random/2015/04/11/TextClustering.html</link>
        <guid isPermaLink="true">georgedittmar.github.io/random/2015/04/11/TextClustering.html</guid>
        
        
        <category>random</category>
        
      </item>
    
      <item>
        <title>Getting Back on The Machine Learning Horse</title>
        <description>&lt;p&gt;Its time to get serious about where I want to move my career and keep my research skills fresh. Thats why I am attempting to get
back on the Machine Learning horse. Most of this has to do with wanting to expand my employable skill sets but also really
dive into the problems I want to solve now with big data and its application to the ML research field. With the explosion in the
popularity of ML the last 5 years with online MOOCS and roles such as Data Science being found at jobs all over, its hard not to want to get back in on the action! 
I really need to get my focus back to my research roots in ML and just build cool and interesting things that can hopefully expand into work with my current
company or with others. Who knows but now that there are so many tools and resources out there it seems crazy not to try to 
do some self study and research these days.&lt;/p&gt;

&lt;p&gt;Current goals will focus around brushing up on my background mathematics that have gotten rusty and their application in
solving many ML algorithms. Hoping to make this blog a nice journal / portfolio of my work towards getting myself where I want
to be and maybe I can teach some other people some stuff as I go through these problems again. One can hope at least :)&lt;/p&gt;

&lt;p&gt;Plan of attack is work on my &lt;a href=&quot;https://github.com/GeorgeDittmar/Scala-NeuralNet&quot;&gt;Scala Neural Net project&lt;/a&gt;, brush up on Linear Algebra and Stats, and build out a reddit bot with a collegue of mine.
Sure is going to be bunch of work but it should be fun. Thats why we are the mad scientists right?&lt;/p&gt;

&lt;p&gt;– GWD&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2015 15:21:00 -0700</pubDate>
        <link>georgedittmar.github.io/machine/learning/2015/04/08/Getting-back-on-the-horse.html</link>
        <guid isPermaLink="true">georgedittmar.github.io/machine/learning/2015/04/08/Getting-back-on-the-horse.html</guid>
        
        
        <category>machine</category>
        
        <category>learning</category>
        
      </item>
    
      <item>
        <title>Hello Blog World!</title>
        <description>&lt;p&gt;Well today is the day I start using Jekyll and becoming one of those cool developers who maintains a blog / portfolio site
on their github repo.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Apr 2015 15:36:44 -0700</pubDate>
        <link>georgedittmar.github.io/random/2015/04/05/hello-blog-world-.html</link>
        <guid isPermaLink="true">georgedittmar.github.io/random/2015/04/05/hello-blog-world-.html</guid>
        
        
        <category>random</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 05 Apr 2015 14:39:44 -0700</pubDate>
        <link>georgedittmar.github.io/jekyll/update/2015/04/05/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">georgedittmar.github.io/jekyll/update/2015/04/05/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
